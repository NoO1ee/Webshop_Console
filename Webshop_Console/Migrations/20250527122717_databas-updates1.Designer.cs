// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Webshop_Console.Models;

#nullable disable

namespace Webshop_Console.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250527122717_databas-updates1")]
    partial class databasupdates1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorityModelUserModel", b =>
                {
                    b.Property<int>("AuthoritiesId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("AuthoritiesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("AuthorityModelUserModel");
                });

            modelBuilder.Entity("Webshop_Console.Models.ArticleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<string>("EanCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Storage")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UnitId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleCode = "344233",
                            Bio = "Skuggornas mördare - osynlig och snabb",
                            CategoryId = 3,
                            DiscountId = 1,
                            EanCode = "30291823",
                            IsFeatured = false,
                            Name = "Quenton Quack",
                            Price = 3000m,
                            Storage = 200,
                            SupplierId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArticleCode = "430233",
                            Bio = "Mästarens prickskytt - ser från mils avstånd",
                            CategoryId = 1,
                            DiscountId = 1,
                            EanCode = "20230304",
                            IsFeatured = false,
                            Name = "Beatrix Drake",
                            Price = 50000m,
                            Storage = 2,
                            SupplierId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 3,
                            ArticleCode = "414663",
                            Bio = "Spion-anka - infiltrerar fiendelinjer",
                            CategoryId = 3,
                            DiscountId = 1,
                            EanCode = "23232123",
                            IsFeatured = true,
                            Name = "Agent Mallory Mallard",
                            Price = 4499m,
                            Storage = 42,
                            SupplierId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 4,
                            ArticleCode = "748454",
                            Bio = "Skogens väktare - bågskytt och överlevare",
                            CategoryId = 2,
                            DiscountId = 1,
                            EanCode = "12312312",
                            IsFeatured = false,
                            Name = "Archibald Quill",
                            Price = 15000m,
                            Storage = 32,
                            SupplierId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 5,
                            ArticleCode = "112577",
                            Bio = "Elementarkrigare - kontrollerar eld och is",
                            CategoryId = 2,
                            DiscountId = 1,
                            EanCode = "44512315",
                            IsFeatured = true,
                            Name = "Magnus Mallard",
                            Price = 12999m,
                            Storage = 15,
                            SupplierId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 6,
                            ArticleCode = "245552",
                            Bio = "Helande räddare - botar och stärker allierade",
                            CategoryId = 3,
                            DiscountId = 1,
                            EanCode = "04912454",
                            IsFeatured = false,
                            Name = "Helga Mallard",
                            Price = 5600m,
                            Storage = 16,
                            SupplierId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 7,
                            ArticleCode = "692042",
                            Bio = "Oövervinnerlig - drar åt sig all fiendeuppmärksamhet",
                            CategoryId = 3,
                            DiscountId = 1,
                            EanCode = "07669964",
                            IsFeatured = false,
                            Name = "Bruno Beak",
                            Price = 4420m,
                            Storage = 6,
                            SupplierId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 8,
                            ArticleCode = "024132",
                            Bio = "Mekaniker-anka - bygger fällor och turrets",
                            CategoryId = 2,
                            DiscountId = 1,
                            EanCode = "50042244",
                            IsFeatured = false,
                            Name = "Greta Quack",
                            Price = 11000m,
                            Storage = 4,
                            SupplierId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 9,
                            ArticleCode = "400234",
                            Bio = "Ismagikern - fryser fiender på plats",
                            CategoryId = 1,
                            DiscountId = 1,
                            EanCode = "12499902",
                            IsFeatured = false,
                            Name = "Finn Feather",
                            Price = 90300m,
                            Storage = 1,
                            SupplierId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 10,
                            ArticleCode = "932491",
                            Bio = "Vildsint kämpe - kullkastar allt som står i vägen",
                            CategoryId = 1,
                            DiscountId = 1,
                            EanCode = "29490501",
                            IsFeatured = false,
                            Name = "Roland Drake",
                            Price = 159000m,
                            Storage = 3,
                            SupplierId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 11,
                            ArticleCode = "233993",
                            Bio = "Helig präst - välsignar och fördriver mörker",
                            CategoryId = 3,
                            DiscountId = 1,
                            EanCode = "91204329",
                            IsFeatured = false,
                            Name = "Lyra Quill",
                            Price = 1500m,
                            Storage = 1,
                            SupplierId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 12,
                            ArticleCode = "499532",
                            Bio = "Listig tjuv - snor skatter och smyger förbi vakter",
                            CategoryId = 3,
                            DiscountId = 1,
                            EanCode = "49402123",
                            IsFeatured = false,
                            Name = "Shadow Mallard",
                            Price = 4030m,
                            Storage = 3,
                            SupplierId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 13,
                            ArticleCode = "230032",
                            Bio = "Test Anka",
                            CategoryId = 2,
                            DiscountId = 1,
                            EanCode = "590239583",
                            IsFeatured = false,
                            Name = "Fighter Ducker",
                            Price = 4223m,
                            Storage = 2,
                            SupplierId = 1,
                            UnitId = 1
                        });
                });

            modelBuilder.Entity("Webshop_Console.Models.AuthorityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authorities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdmin = false,
                            IsOwner = false,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            IsAdmin = true,
                            IsOwner = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            IsAdmin = true,
                            IsOwner = true,
                            Name = "Owner"
                        });
                });

            modelBuilder.Entity("Webshop_Console.Models.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryModel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Legendarisk"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Episk"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Basic"
                        });
                });

            modelBuilder.Entity("Webshop_Console.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ingen rabatt",
                            Percentage = 0m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Silver medlem",
                            Percentage = 20m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Guld medlem",
                            Percentage = 50m
                        });
                });

            modelBuilder.Entity("Webshop_Console.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceAtPurchase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Webshop_Console.Models.OrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Webshop_Console.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kortbetalning"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Swish"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Faktura"
                        },
                        new
                        {
                            Id = 4,
                            Name = "PayPal"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Kryptovaluta"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Kontant"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Delbetalning"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Presentkort"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Autogiro"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Adex"
                        });
                });

            modelBuilder.Entity("Webshop_Console.Models.PaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MethodId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MethodId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Webshop_Console.Models.SupplierModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SpyVer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Assultis"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Defensia"
                        },
                        new
                        {
                            Id = 4,
                            Name = "TechnoQuack"
                        },
                        new
                        {
                            Id = 5,
                            Name = "MysticMallard"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Elemental Forces"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Nature's Guardians"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Shadow Syndicate"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Fighter's Forge"
                        });
                });

            modelBuilder.Entity("Webshop_Console.Models.UnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Healer",
                            Symbol = "Präst"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Assassin",
                            Symbol = "Mödare"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tank",
                            Symbol = "Sköld"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mage",
                            Symbol = "Magiker"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Warrior",
                            Symbol = "Krigare"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ranger",
                            Symbol = "Bågskytt"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Engineer",
                            Symbol = "Mekaniker"
                        });
                });

            modelBuilder.Entity("Webshop_Console.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AuthorityModelUserModel", b =>
                {
                    b.HasOne("Webshop_Console.Models.AuthorityModel", null)
                        .WithMany()
                        .HasForeignKey("AuthoritiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webshop_Console.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Webshop_Console.Models.ArticleModel", b =>
                {
                    b.HasOne("Webshop_Console.Models.CategoryModel", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Webshop_Console.Models.Discount", "Discount")
                        .WithMany("Articles")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Webshop_Console.Models.SupplierModel", "Supplier")
                        .WithMany("Articles")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Webshop_Console.Models.UnitModel", "Unit")
                        .WithMany("Articles")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Discount");

                    b.Navigation("Supplier");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Webshop_Console.Models.OrderItem", b =>
                {
                    b.HasOne("Webshop_Console.Models.ArticleModel", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webshop_Console.Models.OrderModel", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Webshop_Console.Models.OrderModel", b =>
                {
                    b.HasOne("Webshop_Console.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Webshop_Console.Models.PaymentModel", b =>
                {
                    b.HasOne("Webshop_Console.Models.PaymentMethod", "Method")
                        .WithMany("Payments")
                        .HasForeignKey("MethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webshop_Console.Models.OrderModel", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("Webshop_Console.Models.PaymentModel", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Method");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Webshop_Console.Models.CategoryModel", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Webshop_Console.Models.Discount", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Webshop_Console.Models.OrderModel", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Webshop_Console.Models.PaymentMethod", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Webshop_Console.Models.SupplierModel", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Webshop_Console.Models.UnitModel", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
